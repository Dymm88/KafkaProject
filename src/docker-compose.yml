volumes:
  pg_data:

services:
  producer:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    depends_on:
      - postgres
      - kafka

  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app/consumer/app
    command: ["poetry", "run", "python", "main.py"]
    depends_on:
      - postgres
      - kafka

  postgres:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_DB: "test"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - ./db:/docker-entrypoint-initdb.d

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 2s
      retries: 5

  zookeeper:
    image: wurstmeister/zookeeper

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 7s
      timeout: 7s
      retries: 5